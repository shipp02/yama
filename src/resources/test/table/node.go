//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Node = newNodeTable()

type NodeTable struct {
	mysql.Table

	//Columns
	ID         mysql.ColumnInteger
	DocumentID mysql.ColumnInteger
	Name       mysql.ColumnString
	Children   mysql.ColumnBool
	ParentID   mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

// AS creates new NodeTable with assigned alias
func (a *NodeTable) AS(alias string) NodeTable {
	aliasTable := newNodeTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newNodeTable() NodeTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		DocumentIDColumn = mysql.IntegerColumn("document_id")
		NameColumn       = mysql.StringColumn("name")
		ChildrenColumn   = mysql.BoolColumn("children")
		ParentIDColumn   = mysql.IntegerColumn("parent_id")
		allColumns       = mysql.ColumnList{IDColumn, DocumentIDColumn, NameColumn, ChildrenColumn, ParentIDColumn}
		mutableColumns   = mysql.ColumnList{DocumentIDColumn, NameColumn, ChildrenColumn, ParentIDColumn}
	)

	return NodeTable{
		Table: mysql.NewTable("test", "node", allColumns...),

		//Columns
		ID:         IDColumn,
		DocumentID: DocumentIDColumn,
		Name:       NameColumn,
		Children:   ChildrenColumn,
		ParentID:   ParentIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
